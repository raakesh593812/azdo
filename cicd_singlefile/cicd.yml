# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger: none

pool: viv-poc
variables:
  Environment: $(Build.SourceBranchName)
stages:
- stage: Build
  pool: viv-poc
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 'default'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(system.defaultworkingDirectory)'
        Contents: '**/*.war'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: printAllVariables@1
- stage: Deploy 
  displayName: 'Deploy to ${{ variables.Environment }}stage'
  dependsOn: Build

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature'))
    displayName: Deploy
    pool: viv-poc
    environment: Manual
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: '**/*.war'
              TargetFolder: '$(System.DefaultWorkingDirectory)/b'
